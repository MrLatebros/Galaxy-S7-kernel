ui_print("***********************************************");
ui_print("          ThunderStorm Kernel Oreo             ");
ui_print("             For Samsung Galaxy S7             ");
ui_print("   Developed by ThundeRStormS Team             ");
ui_print("                       TS Team                 ");
ui_print("***********************************************");
set_progress(0.01);

# Thanks to @MoRoGoKu for oryginal script

# Copy scripts
package_extract_dir("ts", "/tmp/ts");
set_perm_recursive(0, 0, 0777, 0777, "/tmp/ts");


# Prepare partitions
if is_mounted("/system") == "/system" then
    assert(run_program("/sbin/busybox", "umount", "/system"));
endif;

if is_mounted("/data") == "/data" then
    assert(run_program("/sbin/busybox", "umount", "/data"));
endif;
	
ui_print(" ");
ui_print("@Mounting partitions");
run_program("/sbin/mount", "/system");
run_program("/sbin/mount", "/data");


ui_print(" ");
ui_print("@Flashing kernel");
if is_substring("G935", getprop("ro.boot.bootloader")) then
	ui_print("-- G935 S7 Edge");
	run_program("/tmp/ts/flash_kernel.sh", "G935");
	ui_print("-- Done");
endif;
	
if is_substring("G930", getprop("ro.boot.bootloader")) then
	ui_print("-- G930 S7 Flat");
	run_program("/tmp/ts/flash_kernel.sh", "G930");
	ui_print("-- Done");
endif;


ui_print(" ");
ui_print("@Patching /system");
package_extract_dir("ts/system", "/system");
run_program("/tmp/ts/del_wakelock.sh");


####################################################
# OTHER OPTIONS
####################################################

# Private mode
if file_getprop("/tmp/aroma/menu.prop", "chk9") == "1" then
	ui_print(" ");
	ui_print("@Fix Private Mode");
	run_program("/tmp/ts/privatemode.sh");
	package_extract_dir("ts/private_mode", "/system");
endif;


# MTweaks
if file_getprop("/tmp/aroma/menu.prop", "chk2") == "1" then
	ui_print(" ");
	ui_print("@MTWeaks App");
	delete_recursive("/system/app/com.moro.mtweaks*");
	delete_recursive("/system/priv-app/com.moro.mtweaks*");
	delete_recursive("/data/app/com.moro.mtweaks*");
	delete_recursive("/data/data/com.moro.mtweaks*");
	package_extract_dir("/tmp/ts/apps/com.moro.mtweaks-1", "/data/app/com.moro.mtweaks-1");
endif;


# Recovery
if file_getprop("/tmp/aroma/menu.prop", "chk8") == "1" then
	ui_print(" ");
	ui_print("@Flashing patched recovery TWRP 3.2.3-0 by Tkkg1994");
	if is_substring("G935", getprop("ro.boot.bootloader")) then
		ui_print("-- G935 S7 Edge");
		run_program("/tmp/ts/flash_recovery.sh", "G935");
		ui_print("-- Done");
	endif;
		
	if is_substring("G930", getprop("ro.boot.bootloader")) then
		ui_print("-- G930 S7 Flat");
		run_program("/tmp/ts/flash_recovery.sh", "G930");
		ui_print("-- Done");
	endif;
endif;


ui_print(" ");
ui_print("@Setting Permissions");
set_metadata("/system/vendor/lib/libsecure_storage.so", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib64/libsecure_storage.so", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/egl/libGLES_mali.so", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib64/egl/libGLES_mali.so", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/priv-app/PersonalPageService", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");

set_metadata("/system/bin/logd", "uid", 1036, "gid", 1036, "mode", 0550, "capabilities", 0x440000040, "selabel", "u:object_r:logd_exec:s0");


####################################################
# ROOT
####################################################
set_progress(0.10);


ui_print(" ");
ui_print("@Root");

# Without Root
if file_getprop("/tmp/aroma/menu.prop", "group1") == "opt1" then

	ui_print("-- Without Root");
	if file_getprop("/tmp/aroma/menu.prop", "chk7") == "1" then
		ui_print("-- Clear root data");
		run_program("/tmp/ts/clean_supersu.sh");
		run_program("/tmp/ts/clean_magisk.sh");
		run_program("/tmp/ts/ts_clean.sh", "eu.chainfire.supersu", "-asd");
		run_program("/tmp/ts/ts_clean.sh", "eu.chainfire.suhide", "-asd");
		run_program("/tmp/ts/ts_clean.sh", "com.topjohnwu.magisk", "-asd");
	endif;
endif;

# Magisk Root
if file_getprop("/tmp/aroma/menu.prop", "group1") == "opt2" then
show_progress(0.85, "-19000");
	
	# Clean opposite kernel
	run_program("/tmp/ts/clean_supersu.sh");
	run_program("/tmp/ts/ts_clean.sh", "eu.chainfire.supersu", "-asd");
	run_program("/tmp/ts/ts_clean.sh", "eu.chainfire.suhide", "-asd");

	if file_getprop("/tmp/aroma/menu.prop", "chk7") == "1" then
		ui_print("-- Clearing root data");
		run_program("/tmp/ts/clean_magisk.sh");
		run_program("/tmp/ts/ts_clean.sh", "com.topjohnwu.magisk", "-asd");
	endif;
		
	ui_print("-- Rooting with Magisk Manager");
	ui_print(" ");
	package_extract_dir("magisk", "/tmp/magisk");
	run_program("/sbin/busybox", "unzip", "/tmp/magisk/magisk.zip", "META-INF/com/google/android/*", "-d", "/tmp/magisk");
	run_program("/sbin/sh", "/tmp/magisk/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/magisk/magisk.zip");
	delete_recursive("/tmp/magisk");
endif;

# SuperSU Root
if file_getprop("/tmp/aroma/menu.prop", "group1") == "opt3" then
show_progress(0.85, "-34000");
	
	# Clean opposite kernel
	run_program("/tmp/ts/clean_magisk.sh");
	run_program("/tmp/ts/ts_clean.sh", "com.topjohnwu.magisk", "-asd");

	if file_getprop("/tmp/aroma/menu.prop", "chk7") == "1" then
		ui_print("-- Clearing root data");
		run_program("/tmp/ts/clean_supersu.sh");
		run_program("/tmp/ts/ts_clean.sh", "eu.chainfire.supersu", "-asd");
		run_program("/tmp/ts/ts_clean.sh", "eu.chainfire.suhide", "-asd");
	endif;	

	run_program("/tmp/ts/supersu.sh");
	
	ui_print("-- Rooting with SuperSU");
	package_extract_dir("supersu", "/tmp/supersu");
	run_program("/sbin/busybox", "unzip", "/tmp/supersu/supersu.zip", "META-INF/com/google/android/*", "-d", "/tmp/supersu");
	run_program("/sbin/sh", "/tmp/supersu/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/supersu/supersu.zip");
	delete_recursive("/tmp/supersu");

	ui_print(" ");
	ui_print("-- Suhide");
	package_extract_dir("suhide", "/tmp/suhide");
	run_program("/sbin/busybox", "unzip", "/tmp/suhide/suhide.zip", "META-INF/com/google/android/*", "-d", "/tmp/suhide");
	run_program("/sbin/sh", "/tmp/suhide/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/suhide/suhide.zip");
	delete_recursive("/tmp/suhide");
endif;

#####################################################

ui_print(" ");
ui_print("-- Unmounting Partition");
ifelse(is_mounted("/system"), unmount("/system"));

set_progress(1.00);
ui_print(" ");
ui_print("** The ThundeRStormS kernel and mods are installed **");
ui_print(" ");

